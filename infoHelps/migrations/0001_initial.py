# Generated by Django 5.0.4 on 2024-05-01 16:56

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('buildings', '0001_initial'),
        ('helpInfo', '0001_initial'),
        ('passport', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BranchesMO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branchesMOCode', models.CharField(blank=True, max_length=16, null=True, verbose_name='Код филиала')),
                ('branchesMOName', models.CharField(blank=True, max_length=50, null=True, verbose_name='Полного наименования филиала МО')),
                ('branchesMOshortName', models.CharField(blank=True, max_length=50, null=True, verbose_name='Краткое наименование филиала МО')),
                ('inDate', models.DateField(verbose_name='Даты начала действия филиала')),
                ('outDate', models.DateField(verbose_name='Даты окончания действия филиала')),
                ('passportMO', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='passport.passportmo')),
            ],
            options={
                'verbose_name': 'Филиал',
                'verbose_name_plural': 'Филиалы',
            },
        ),
        migrations.CreateModel(
            name='CurrentAccountMO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currentAccountMOName', models.CharField(blank=True, max_length=50, null=True, verbose_name='Наименование')),
                ('currentAccountMOBank', models.CharField(blank=True, max_length=80, null=True, verbose_name='Банк')),
                ('accountNoMO', models.CharField(blank=True, max_length=16, null=True, verbose_name='Номер счета')),
                ('inDate', models.DateField(verbose_name='Дата открытия')),
                ('outDate', models.DateField(verbose_name='Дата закрытия')),
                ('valuta', models.CharField(blank=True, max_length=8, null=True, verbose_name='Валюта')),
                ('passportMO', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='passport.passportmo')),
            ],
            options={
                'verbose_name': 'Расчетный счет',
                'verbose_name_plural': 'Расчетный счет',
            },
        ),
        migrations.CreateModel(
            name='HeadsMO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phoneHeadMO', models.CharField(blank=True, max_length=16, null=True, verbose_name='Телефон')),
                ('emailHeadMO', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('passportMO', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='passport.passportmo')),
                ('titleMO', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='helpInfo.jobtitle', verbose_name='Должность')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Ф.И.О.')),
            ],
            options={
                'verbose_name': 'Руководство МО',
                'verbose_name_plural': 'Руководство МО',
            },
        ),
        migrations.CreateModel(
            name='helpIndosMO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('countVisit', models.IntegerField(blank=True, null=True, verbose_name='Посещений в смену')),
                ('countBed', models.IntegerField(blank=True, null=True, verbose_name='Число коек')),
                ('levelInNet', models.CharField(choices=[('BASE', 'основное'), ('SUB', 'подчиненное')], default='BASE', max_length=4, verbose_name='Уровень учреждения в иерархии сети')),
                ('lab', models.BooleanField(default=False, verbose_name='Организация является внешней лабораторией?')),
                ('capitalEquipment', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Фондооснащенность на 1 кв.м (сом.)')),
                ('capitalLabor', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Фондовооруженность на 1 врача (сом.)')),
                ('mustVisit', models.IntegerField(blank=True, null=True, verbose_name='Количество обращений')),
                ('dayVisit', models.IntegerField(blank=True, null=True, verbose_name='за количество дней для включения в регистр')),
                ('dayOutVisit', models.IntegerField(blank=True, null=True, verbose_name='Дней без обращений для снятия статуса')),
                ('FRMOlevelMO', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='helpInfo.frmolevelmo', verbose_name='ФРМО. Уровень МО')),
                ('levelMO', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='helpInfo.levelmo', verbose_name='Уровень МО')),
                ('levelSub', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='helpInfo.levelsub', verbose_name='Уровень подчиненности')),
                ('organizion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='helpInfo.organizion', verbose_name='Головное учреждение')),
                ('passportMO', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='passport.passportmo')),
            ],
            options={
                'verbose_name': 'Справочная информация',
                'verbose_name_plural': 'Справочная информация',
            },
        ),
        migrations.CreateModel(
            name='ISMO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nameISMO', models.CharField(blank=True, max_length=50, null=True, verbose_name='Наименование')),
                ('typeISMOName', models.CharField(blank=True, max_length=50, null=True, verbose_name='Тип ИС')),
                ('developerISMO', models.CharField(blank=True, max_length=80, null=True, verbose_name='Наименование разработчика')),
                ('inDateISMO', models.DateField(verbose_name='Дата внедрения')),
                ('costISMO', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Стоимость ИС')),
                ('escortISMO', models.IntegerField(choices=[(None, '(Пусто)'), (0, 'Нет'), (1, 'Да')], default=1, verbose_name='Признак сопровождения')),
                ('costEscortISMO', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Стоимость сопровождения')),
                ('passportMO', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='passport.passportmo')),
            ],
            options={
                'verbose_name': 'Информационная система',
                'verbose_name_plural': 'Информационная система',
            },
        ),
        migrations.CreateModel(
            name='LicensesMO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('licensesNoMO', models.CharField(blank=True, max_length=16, null=True, verbose_name='Номер лицензии')),
                ('issueDate', models.DateField(verbose_name='Дата выдачи')),
                ('regNoMO', models.CharField(blank=True, max_length=16, null=True, verbose_name='Регистрационный номер')),
                ('inDate', models.DateField(verbose_name='Начало действия')),
                ('outDate', models.DateField(verbose_name='Окончание действия')),
                ('kindActivity', models.CharField(blank=True, max_length=16, null=True, verbose_name='Вид деятельности')),
                ('organizion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='helpInfo.organizion', verbose_name='Выдавшая организация')),
                ('passportMO', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='passport.passportmo')),
            ],
            options={
                'verbose_name': 'Лицензии МО',
                'verbose_name_plural': 'Лицензии МО',
            },
        ),
        migrations.CreateModel(
            name='SecondServicesMO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secondServicesMOCode', models.CharField(blank=True, max_length=16, null=True, verbose_name='Код услуги')),
                ('secondServicesMOName', models.CharField(blank=True, max_length=50, null=True, verbose_name='Наименование услуги')),
                ('inDate', models.DateField(verbose_name='Дата начала оказания услуги')),
                ('outDate', models.DateField(verbose_name='Дата окончания оказания услуги')),
                ('passportMO', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='passport.passportmo')),
            ],
            options={
                'verbose_name': 'Направления оказания медицинской помощи',
                'verbose_name_plural': 'Направления оказания медицинской помощи',
            },
        ),
        migrations.CreateModel(
            name='ServiceMO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('licenseNoMO', models.CharField(blank=True, max_length=16, null=True, verbose_name='Номер лицензии на услугу')),
                ('passportMO', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='passport.passportmo')),
                ('serviceMOName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='helpInfo.medservice', verbose_name='Медицинские услуги')),
            ],
            options={
                'verbose_name': 'Медицинские услуги',
                'verbose_name_plural': 'Медицинские услуги',
            },
        ),
        migrations.CreateModel(
            name='spesMO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codeProfileMO', models.CharField(blank=True, max_length=16, null=True, verbose_name='Код медицинского профиля.')),
                ('profileMOName', models.CharField(blank=True, max_length=50, null=True, verbose_name='Медицинский профиль.')),
                ('licenseNoMO', models.CharField(blank=True, max_length=80, null=True, verbose_name='Номер лицензии')),
                ('beAAfterCareMO', models.IntegerField(choices=[(None, '(Пусто)'), (0, 'Нет'), (1, 'Да')], default=1, verbose_name='Наличие отделения долечивания')),
                ('passportMO', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='passport.passportmo')),
            ],
            options={
                'verbose_name': 'Специализация организации',
                'verbose_name_plural': 'Специализация организации',
            },
        ),
        migrations.CreateModel(
            name='TechsMO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('techMOName', models.CharField(blank=True, max_length=50, null=True, verbose_name='Медицинские технологии')),
                ('classTechMO', models.CharField(blank=True, max_length=16, null=True, verbose_name='Класс технологии')),
                ('buildingMO', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='buildings.buildingmo', verbose_name='Идентификатор здания')),
                ('passportMO', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='passport.passportmo')),
            ],
            options={
                'verbose_name': 'Медицинские технологии',
                'verbose_name_plural': 'Медицинские технологии',
            },
        ),
    ]
